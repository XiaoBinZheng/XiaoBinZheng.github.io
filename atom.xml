<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Zheng's Blog]]></title>
  <subtitle><![CDATA[Just for fun...]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-07-17T06:34:24.874Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[XiaoBin Zheng]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Markdown语法备忘]]></title>
    <link href="http://yoursite.com/2016/07/16/Markdown%E8%AF%AD%E6%B3%95%E5%A4%87%E5%BF%98/"/>
    <id>http://yoursite.com/2016/07/16/Markdown语法备忘/</id>
    <published>2016-07-16T07:20:03.000Z</published>
    <updated>2016-07-17T06:34:24.874Z</updated>
    <content type="html"><![CDATA[<h2 id="u884C_u5185HTML"><a href="#u884C_u5185HTML" class="headerlink" title="行内HTML"></a>行内HTML</h2><p>Markdown可以直接嵌入Html的格式语法，例如：</p>
<pre><code>This is a regular paragraph.

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Foo&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

This is another regular paragraph.
</code></pre><p><strong>效果</strong>：</p>
<p>This is a regular paragraph.</p>
<table><tr><td>Foo</td></tr></table>

<p>This is another regular paragraph.</p>
<hr>
<h2 id="u6BB5_u843D_u4E0E_u6362_u884C"><a href="#u6BB5_u843D_u4E0E_u6362_u884C" class="headerlink" title="段落与换行"></a>段落与换行</h2><p>一个段落由一个相连接的行句组成，通过一个以上的空行可以切分成不同的段落。</p>
<p>通过输入<code>&lt;br /&gt;</code>标签，或者直接在行尾加上两个以上的空白，然后按enter，也可以实现换行的效果。</p>
<p>Markdown更推荐使用引用和多段落的列表格式来排版。</p>
<hr>
<h2 id="u6807_u9898"><a href="#u6807_u9898" class="headerlink" title="标题"></a>标题</h2><p>Markdown支持两种标题的语法，Setext和atx形式。</p>
<p>Setext形式是用底线的形式，利用=（最高级标题）和-（第二级标题），例如：</p>
<pre><code>This is an H1
=============

This is an H2
-------------
</code></pre><p>Atx形式则是在行首插入1到6个#，各对应标题h1到h6，例如：</p>
<pre><code># This is an H1

## This is an H2

###### This is an H6
</code></pre><hr>
<h2 id="u533A_u5757_u5F15_u8A00"><a href="#u533A_u5757_u5F15_u8A00" class="headerlink" title="区块引言"></a>区块引言</h2><p>引言语法，示例：</p>
<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&gt; 
&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&gt; id sem consectetuer libero luctus adipiscing.
</code></pre><p><strong>效果:</strong></p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>Markdown也允许你只在整个段落的第一行最前面加上&gt;：</p>
<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
</code></pre><p><strong>效果:</strong></p>
<blockquote>
<p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br>consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br>Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
<p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br>id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>区块引言可以有级别，根据级别加上不同数量的&gt;:    </p>
<pre><code>&gt; This is the first level of quoting.
&gt;
&gt; &gt; This is nested blockquote.
&gt;
&gt; Back to the first level.
</code></pre><p><strong>效果:</strong></p>
<blockquote>
<p>This is the first level of quoting.</p>
<blockquote>
<p>This is nested blockquote.</p>
</blockquote>
<p>Back to the first level.</p>
</blockquote>
<p>引言的区块内可以 使用其他的Markdown语法，如标题、列表、程序代码区块等。</p>
<pre><code>&gt; ## This is a header.
&gt; 
&gt; 1.   This is the first list item.
&gt; 2.   This is the second list item.
&gt; 
&gt; Here&apos;s some example code:
&gt; 
&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre><p><strong>效果</strong>：</p>
<blockquote>
<h2 id="This_is_a_header"><a href="#This_is_a_header" class="headerlink" title="This is a header."></a>This is a header.</h2><ol>
<li>This is the first list item.</li>
<li>This is the second list item.</li>
</ol>
<p>Here’s some example code:</p>
<pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre></blockquote>
<hr>
<h2 id="u5217_u8868"><a href="#u5217_u8868" class="headerlink" title="列表"></a>列表</h2><p>Markdown语法支持有序列表和无序列表。</p>
<p>无序列表使用星号、加减或是减号作为列表标记：</p>
<pre><code>*   Red
*   Green
*   Blue
</code></pre><p>等价于：</p>
<pre><code>+   Red
+   Green
+   Blue
</code></pre><p>也等价于：</p>
<pre><code>-   Red
-   Green
-   Blue
</code></pre><p><strong>效果：</strong></p>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<p>有序列表使用数字加一个英文句点：</p>
<pre><code>1.  Bird
2.  McHale
3.  Parish
</code></pre><p><strong>效果：</strong></p>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<hr>
<h2 id="u7A0B_u5E8F_u4EE3_u7801_u533A_u5757"><a href="#u7A0B_u5E8F_u4EE3_u7801_u533A_u5757" class="headerlink" title="程序代码区块"></a>程序代码区块</h2><p>使用4个空白或是1个tab，示例：</p>
<pre><code>This is a normal paragraph:

    &lt;div&gt;This is a code block.&lt;/div&gt;
</code></pre><p><strong>效果：</strong></p>
<p>This is a normal paragraph:</p>
<pre><code>&lt;div&gt;This is a code block.&lt;/div&gt;
</code></pre><p>行内程序代码区块，可以使用（`）符号将代码包起来，例如：</p>
<pre><code>Use the `printf()` function.
</code></pre><p><strong>效果：</strong></p>
<p>Use the <code>printf()</code> function.</p>
<hr>
<h2 id="u5206_u5272_u7EBF"><a href="#u5206_u5272_u7EBF" class="headerlink" title="分割线"></a>分割线</h2><p>示例（省略显示效果）：</p>
<pre><code>* * *

***

*****

- - -

---------------------------------------
</code></pre><hr>
<h2 id="u94FE_u63A5"><a href="#u94FE_u63A5" class="headerlink" title="链接"></a>链接</h2><p>示例：</p>
<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.
</code></pre><p><strong>效果:</strong></p>
<p>This is <a href="http://example.com/" title="Title" target="_blank" rel="external">an example</a> inline link.</p>
<p><a href="http://example.net/" target="_blank" rel="external">This link</a> has no title attribute.</p>
<p>参考形式的链接使用另外一个方括号接在链接文字的括号后面，而在第二个方括号要填入用以辨识链接的标签，示例：</p>
<pre><code>This is [an example] [id] reference-style link.
</code></pre><p>接着，在文档的任意位置，定义标签的链接内容：</p>
<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;
</code></pre><p><strong>效果:</strong></p>
<p>This is <a href="http://example.com/" title="Optional Title Here" target="_blank" rel="external">an example</a> reference-style link.</p>
<hr>
<h2 id="u5F3A_u8C03"><a href="#u5F3A_u8C03" class="headerlink" title="强调"></a>强调</h2><p>Markdown使用星号（*）和下划线（_）作为标记强调内容的符号，被*或<em>包围的内容会被<code>&lt;em&gt;</code>标签包围，用两个*或者\</em>，则会被<code>&lt;strong&gt;</code>包围，例如：</p>
<pre><code>*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
</code></pre><p><strong>效果：</strong></p>
<p><em>single asterisks</em></p>
<p><em>single underscores</em></p>
<p><strong>double asterisks</strong></p>
<p><strong>double underscores</strong></p>
<hr>
<h2 id="u56FE_u7247"><a href="#u56FE_u7247" class="headerlink" title="图片"></a>图片</h2><p>Markdown使用一种和链接很相似的的语法来标记图片，同样也允许两种样式：行內和参考。</p>
<p>行内图片语法，示例：</p>
<pre><code>![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
</code></pre><p>格式为：</p>
<pre><code>![图片替代文字](图片url &quot;图片title&quot;)
</code></pre><p>参考式图片引用语法（具体参考链接的参考式引用）：</p>
<pre><code>![Alt text][id]
[id]: url/to/image  &quot;Optional title attribute&quot;
</code></pre><hr>
<p>内容来自<a href="http://daringfireball.net/projects/markdown/syntax" title="English Edition Document" target="_blank" rel="external">Markdown：Syntax</a>，<a href="http://markdown.tw/" title="Traditional Chinese Edition Document" target="_blank" rel="external">繁体中文版点这里</a>。此处为简体中文，省略了繁体中文版的部分内容，只为熟悉Markdown语法。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u884C_u5185HTML"><a href="#u884C_u5185HTML" class="headerlink" title="行内HTML"></a>行内HTML</h2><p>Markdown可以直接嵌入Html的格式语法，例如：</p>
<pre]]>
    </summary>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
      <category term="Tools" scheme="http://yoursite.com/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[天池流行音乐比赛小结]]></title>
    <link href="http://yoursite.com/2016/07/16/%E5%A4%A9%E6%B1%A0%E6%B5%81%E8%A1%8C%E9%9F%B3%E4%B9%90%E6%AF%94%E8%B5%9B/"/>
    <id>http://yoursite.com/2016/07/16/天池流行音乐比赛/</id>
    <published>2016-07-16T06:38:36.000Z</published>
    <updated>2016-07-17T08:46:29.041Z</updated>
    <content type="html"><![CDATA[<h2 id="u7ADE_u8D5B_u4ECB_u7ECD"><a href="#u7ADE_u8D5B_u4ECB_u7ECD" class="headerlink" title="竞赛介绍"></a>竞赛介绍</h2><p>本次大赛以阿里音乐用户的历史播放数据为基础，期望参赛者可以通过对阿里音乐平台上每个阶段艺人的试听量的预测，挖掘出即将成为潮流的艺人，从而实现对一个时间段内音乐流行趋势的准确把控。</p>
<p>竞赛详情，点击<a href="https://tianchi.shuju.aliyun.com/competition/information.htm?spm=5176.100067.5678.2.pGDBQ0&amp;raceId=231531" target="_blank" rel="external">天池大数据竞赛</a>。</p>
<h2 id="u7B2C_u4E00_u8D5B_u5B63"><a href="#u7B2C_u4E00_u8D5B_u5B63" class="headerlink" title="第一赛季"></a>第一赛季</h2><p>时间序列算法</p>
<p>由于数据是具有时序的，目标是预测接下来的两个月的播放量，所以第一想法是用时间序列来处理这个问题。本来打算用Matlab来处理这个问题，看到队友用python的工具包处理数据的过程，不得不说python在数据处理和分析上更快速便捷，于是决定学一下python。</p>
<p>这里推荐<a href="https://book.douban.com/subject/25779298/" target="_blank" rel="external">《利用Python进行数据分析》</a>这本书。</p>
<p>基本思路是，提取每个艺人6个月里每天的播放量数据，对每个艺人的播放量数据单独绘制自相关图、偏相关图。根据绘制的图像，计算不同的ARMA模型，从中选择最合适的模型，进行残差分析，结果预测等。</p>
<p>由于没有多少时间花在比赛上，所以一开始的目标就是维持进复赛的资格。提交了数据后很长一段时间没有动手。最后第一赛季结束时排到了480多名，勉强进入复赛。</p>
<h2 id="u7B2C_u4E8C_u8D5B_u5B63"><a href="#u7B2C_u4E8C_u8D5B_u5B63" class="headerlink" title="第二赛季"></a>第二赛季</h2><p>进了复赛后，就只能在平台进行比赛，第一次使用平台带来了很大麻烦。加上到了期末，没有多少时间，最后只是勉强提交了一个结果，感谢队友费了不少心。</p>
<p>回归算法<br>取得平台资格后，发现平台并没有提供时间序列算法的模型，而且基本上只有靠SQL来解决问题。考虑到平台有回归模型可以直接调用，所以想到了用回归模型来处理这个问题。</p>
<p>基本思路是，提取特征，对每一个艺人建立回归模型。但是遇到了很多问题，最终没有实现。</p>
<h2 id="u5C0F_u7ED3"><a href="#u5C0F_u7ED3" class="headerlink" title="小结"></a>小结</h2><ol>
<li>学会用python处理和分析数据</li>
<li>了解了阿里的大数据平台</li>
<li>多浏览论坛的内容，可以获得很多有用的信息</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u7ADE_u8D5B_u4ECB_u7ECD"><a href="#u7ADE_u8D5B_u4ECB_u7ECD" class="headerlink" title="竞赛介绍"></a>竞赛介绍</h2><p>本次大赛以阿里音乐用户的历史播放数据为基础，期望]]>
    </summary>
    
      <category term="天池" scheme="http://yoursite.com/tags/%E5%A4%A9%E6%B1%A0/"/>
    
      <category term="音乐趋势， 预测" scheme="http://yoursite.com/tags/%E9%9F%B3%E4%B9%90%E8%B6%8B%E5%8A%BF%EF%BC%8C-%E9%A2%84%E6%B5%8B/"/>
    
      <category term="Competitions" scheme="http://yoursite.com/categories/Competitions/"/>
    
  </entry>
  
</feed>
